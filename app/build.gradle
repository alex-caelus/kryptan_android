apply plugin: 'com.android.application'

android {
        compileSdkVersion = 28
        buildToolsVersion = "28.0.3"

        lintOptions {
            abortOnError false
        }

        defaultConfig {
            applicationId = "org.caelus.kryptanandroid"
            minSdkVersion 15
            targetSdkVersion 28
            versionCode = 4
            versionName = "1.3"

            externalNativeBuild {
                cmake {
                    cFlags.add("-DKRYPTAN_CORE_DO_NOT_USE_SERVER")
                    cFlags.add("-DCRYPTOPP_DISABLE_ASM=1")
                    cFlags.add("-fexceptions")
                    cFlags.add("-frtti")
                    cFlags.add("-I" + file("src/main/jni/kryptan_core"))
                    cppFlags.add("-DKRYPTAN_CORE_DO_NOT_USE_SERVER")
                    cppFlags.add("-DCRYPTOPP_DISABLE_ASM=1")
                    cppFlags.add("-std=gnu++11")
                    cppFlags.add("-fexceptions")
                    cppFlags.add("-frtti")
                    cppFlags.add("-I" + file("src/main/jni/kryptan_core"))
                }
            }
            //ndk {
            //    moduleName = "kryptan_core"
            //    ldLibs.add("log")
            //    stl = "gnustl_shared"
            //}
        }

        compileOptions.with {
            sourceCompatibility = JavaVersion.VERSION_1_7
            targetCompatibility = JavaVersion.VERSION_1_7
        }

    buildTypes {
        release {
            minifyEnabled = false
        }
        debug {
            debuggable = true
        }
    }

    sourceSets.main {
        jni.srcDirs = [] // This prevents the auto generation of Android.mk
        jniLibs.srcDir 'src/main/libs' // This is not necessary unless you have precompiled libraries in your project.
    }
    externalNativeBuild {
        cmake {
            path file('CMakeLists.txt')
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:28.0.0'
}
